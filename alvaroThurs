#### DAISIE model with mainland speciation and immigration ####
# by Mark Wright and Alvaro Rodriguez
remove(list=ls())
set.seed(23)



#### Parameters ####
B <- 0 # number of nonendemic species
Bid <- NULL
E <- 0 # number of endemic species
Eid <- NULL
n <- B + E # number of combined nonendemic and endemic species
K <- 100 
Kmain <- 1200
M <- 1000 # number of mainland species
Mid <- seq(1,1000,1)
ID= Mid #saves all the IDs in the simulation
fatherIDsM=NULL
fatherIDsE=NULL
fatherIDsB=NULL
deadIDs=NULL
t <- -5 # present time is now t=0 and perspective is looking backwards in time = t
gamma0 <- 0.005 # rate of immigration
lambda.c.B0 <- 0.15 # rate of cladogenesis
lambda.c.E0 <- 0.05 # rate of cladogenesis
lambda.c.M0 <- 0.05 # rate of cladogenesis
lambda.a.B0 <- 0.05 # rate of anagenesis
mu.B0 <- 0.2 # rate of extinction
mu.E0 <- 0.002 # rate of extinction
mu.M0 <- 0.00002 # rate of extinction
total.rate <- (M-B)*gamma0 + B*lambda.c.B0 + E*lambda.c.E0 + M*lambda.c.M0 + B*mu.B0 + E*mu.E0 + B*lambda.a.B0 + M*mu.M0 # adjusted per capita rates
richness <- data.frame(matrix(ncol = 5)) # convert to matrix
colnames(richness) <- cbind("t", "B", "E", "n","M")
row <- 1
assign("number_tables",0,envir = .GlobalEnv)
tables=NULL
assign("sim_number",value = 0,envir = .GlobalEnv)


#### Functions ####
dt <- as.numeric(rexp(1, rate = total.rate))
t <- t + dt # define the time of the first event
actualize_rates <- function(B,E,M,n,K){#function which changes the probabily of each event depending on B,M and E
  gamma <- max(0,gamma0*(1-(n-M)/K))
  lambda.c.B <- max(0,lambda.c.B0*(1-n/K))
  lambda.c.E <- max(0,lambda.c.E0*(1-n/K))
  lambda.c.M <- max(0,lambda.c.M0*(1-M/Kmain))
  lambda.a.B <- max(0,lambda.a.B0*(1-n/K))
  mu.B <- max(0,mu.B0*B)
  mu.E <- max(0,mu.E0*E)
  mu.M <- max(0,mu.M0*M)
  return(c(gamma, lambda.c.B, lambda.c.E, lambda.a.B, lambda.c.M, mu.B, mu.E, mu.M))
}

tables <- function(option,richness,speciesID,fatherID,sim_number,number_tables) {
  exit=0
  if (option=="new"){
    #speciesID=23
    #number_tables=number_tables+1
    assign(paste("table_",sim_number,"_", number_tables, sep = ""), matrix(ncol=4,nrow=1,data=c(speciesID,speciesID,-richness[nrow(richness),1],-1)),envir = .GlobalEnv)  
  }else{
    for (i in 1:number_tables){
      a=eval(parse(text=paste("table_",sim_number,"_",i,sep = "")))
      for (j in 1:nrow(a)){
        if(a[j,1]==fatherID){
          if (option == "add"){
            a=rbind(a, c(speciesID,fatherID,-richness[nrow(richness),1],-1))
            assign(paste("table_",sim_number,"_",i,sep = ""),a,envir = .GlobalEnv)
            exit=1
            break
          }
        }
        #print (a[j,1])
        #print (speciesID)
        if(a[j,1]==speciesID){
          if (option == "die"){
            a[j,4]=-richness[nrow(richness),1]
            assign(paste("table_",sim_number,"_",i,sep = ""),a,envir = .GlobalEnv)
            exit=1
            break
          }else if(option == "update"){###????
            substract=-a[j,3]+richness[nrow(richness),1]
            a[1,3]=-richness[nrow(richness),1]
            for(k in j:nrow(a)){
              a[k,3]=a[k,3] + substract
            }
          }
        }
      }
      if (exit==1){break}
    }
  }
}

## anagenesis can still happen (not diversity dependent)

#### Simulation ####
sim_number=sim_number+1
simulation <- function(B,E,M,n,K){
  while(t <= 0){
  rates <- actualize_rates(B,E,M,n,K)
  event <- sample(c("immigration", "cladogenesis_B", "cladogenesis_E","cladogenesis_M", "anagenesis", "extinction_B", "extinction_E","extinction_M"), size = 1, replace = T,  prob = rates)
  if(event == "immigration"){
    B <- B + 1
    M <- M - 1
    take_id=sample(Mid,1)
    setdiff(Mid,take_id)
    Bid=c(Bid,take_id)
    father_id=take_id
    fatherIDsB=c(fatherIDsB,father_id)
    number_tables=number_tables+1
    tables("new",richness,take_id,father_id,sim_number,number_tables)
  } else if (event == "cladogenesis_B" && B>0){
    B <- B - 1
    take_id=length(ID)+1
    ID=c(ID,take_id)
    setdiff(Bid,take_id)
    if(length(fatherIDsB)<=1){
      father_id=fatherIDsB
    }else{
      father_id=sample(fatherIDsB,size = 1)
    }
    fatherIDsB=c(fatherIDsB,take_id)
    choose <- sample(1:0,1)
    if (choose==0){
      E <- E + 2
      Eid=c(Eid,take_id)
      #update table
      tables("add",richness,take_id,father_id,sim_number,number_tables)
      take_id=length(ID)+1
      tables("add",richness,take_id,father_id,sim_number,number_tables)
      ID=c(ID,take_id)
      Eid=c(Eid,take_id)
      #update table
    }else{
      M <- M + 2
      Mid=c(Mid,take_id)
      take_id=length(ID)+1
      ID=c(ID,take_id)
      Mid=c(Mid,take_id)
      ID=c(ID,take_id)
      #nothing with table
    }
  } else if (event == "cladogenesis_E" && E>0){
    E <- E + 1
    take_id=length(ID)+1
    Eid=c(Eid,take_id)
    ID=c(ID,take_id)
    father_id=sample(Eid,size = 1)
    tables("add",richness,take_id,father_id,sim_number,number_tables)
    fatherIDsE=c(fatherIDsE,take_id)
  } else if (event == "cladogenesis_M"){
    M <- M + 1
    take_id=length(ID)+1
    Mid=c(Mid,take_id)
    ID=c(ID,take_id)
  } else if (event == "anagenesis" && B>0){
    B <- B - 1
    take_id=length(ID)+1
    Eid=c(Eid,take_id)
    setdiff(Bid,take_id)
    ID=c(ID,take_id)
    E <- E + 1
  } else if (event == "extinction_B" && B>0){
    print("extin_B")
    B <- B - 1
    take_id=sample(Bid,1)
    setdiff(Bid,take_id)
    deadIDs=c(deadIDs,take_id)
    tables("die",richness,take_id,father_id,sim_number,number_tables)
  } else if (event == "extinction_E"){
    E <- E - 1
    take_id=sample(Eid,1)
    setdiff(Eid,take_id)
    deadIDs=c(deadIDs,take_id)
    tables("die",richness,take_id,father_id,sim_number,number_tables)
  } else if (event == "extinction_M"){
    M <- M - 1
    take_id=sample(Mid,1)
    setdiff(Mid,take_id)
    deadIDs=c(deadIDs,take_id)
  } ### if species on mainland goes extinct, island version becomes endemic
  n <- B + E ### tweak code to reflect ^^ adjusting state-space
  richness[row,] <- c(t, B, E, n, M)
  row <- row + 1
  total.rate <- (M-B)*rates[1] + B*rates[2] + E*rates[3] + M*rates[4] + B*rates[5] + B*rates[6] + E*rates[7] + M*rates[8]
  dt <- as.numeric(rexp(1, rate = total.rate))
  t <- t + dt
}
  return(richness)
}
richness <- simulation(B,E,M,n,K)

#### Plot the simulation ####
plot(data = richness, n~t, type = "l", lty = 2, xlab = "Time (mya)", ylab = "Richness")
lines(data = richness, B~t, col = "blue", lwd = 2)
lines(data = richness, E~t, col = "red", lwd = 2)
par(new=T)
plot(data = richness, M~t, type = "l", axes = F, xlab = NA, ylab = NA, col = "green")
axis(4)
mtext(text = "Mainland Richness", side=4, line=3)
legend(x = "topleft", legend = c("Total, n", "Both, B", "Endemic, E", "Mainland, M", "(Right axis)"), text.col = c("black", "blue", "red", "green", "green"))

#install.packages("DDD")
library(DDD)
table_1_15[1,3]=-1
a=L2phylo(L = table_1_15,dropextinct = F)




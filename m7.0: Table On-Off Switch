#### Island biogeography model with mainland dynamics ####
# by Mark Wright and Alvaro Rodriguez
remove(list=ls())
dev.off()
set.seed(23)



#### Constants that are not redefined per simulation ####
K <- 100
Kmain <- 1200
gamma0 <- 0.01
lambda.c.B0 <- 0.05
lambda.c.E0 <- 0.05
lambda.c.M0 <- 0.05
lambda.a.B0 <- 0.05
mu.B0 <- 0.002
mu.E0 <- 0.002
mu.M0 <- 0.00002
table.generation <- FALSE



#### Define Functions ####
actualize_rates <- function(B,E,M,n){
  gamma <- max(0,gamma0*(1-(n-M)/K))
  lambda.c.B <- max(0,lambda.c.B0*(1-n/K))
  lambda.c.E <- max(0,lambda.c.E0*(1-n/K))
  lambda.c.M <- max(0,lambda.c.M0*(1-M/Kmain))
  lambda.a.B <- max(0,lambda.a.B0*(1-n/K))
  mu.B <- max(0,mu.B0*B)
  mu.E <- max(0,mu.E0*E)
  mu.M <- max(0,mu.M0*M)
  return(c(gamma, lambda.c.B, lambda.c.E, lambda.a.B, lambda.c.M, mu.B, mu.E, mu.M))
}
if(table.generation){
  tables <- function(option,richness,speciesID,fatherID,sim_number,number_tables) {
    exit=0
    if (option=="new"){
      assign(paste("table_",sim_number,"_", number_tables, sep = ""), matrix(ncol=4,nrow=1,data=c(speciesID,-1,-richness[nrow(richness),1],-1)),envir = .GlobalEnv)  
    }else{
      for (i in 1:number_tables){
        a=eval(parse(text=paste("table_",sim_number,"_",i,sep = "")))
        for (j in 1:nrow(a)){
          if(a[j,1]==fatherID){
            if (option == "add"){
              a=rbind(a, c(speciesID,fatherID,-richness[nrow(richness),1],-1))
              assign(paste("table_",sim_number,"_",i,sep = ""),a,envir = .GlobalEnv)
              exit=1
              break
            }
          }
          if(a[j,1]==speciesID){
            if (option == "die"){
              a[j,4]=-richness[nrow(richness),1]
              assign(paste("table_",sim_number,"_",i,sep = ""),a,envir = .GlobalEnv)
              exit=1
              break
            }else if(option == "update"){###????
              print(paste("table_",sim_number,"_",i,sep = ""))
              substract=-a[j,3]
              #a[1,3]=-richness[nrow(richness),1]
              for(k in j:nrow(a)){
                a[k,3]=a[k,3] - substract
              }
              assign(paste("table_",sim_number,"_",i,sep = ""),a,envir = .GlobalEnv)
              exit=1
              break
            }
          }
        }
        if (exit==1){break}
      }
    }
  } 
}



#### Simulation ####
simulation <- function(B,E,M){
  B <- 0
  E <- 0
  M <- 1000
  n <- B + E
  t <- -10
  richness <- data.frame(matrix(ncol = 5))
  colnames(richness) <- cbind("t", "B", "E", "n","M")
  row <- 0
  if(table.generation){
    Bid <- NULL
    Eid <- NULL
    Mid <- seq(1,1000,1)
    ID <- Mid
    deadIDs <- NULL
    assign("number_tables",0,envir = .GlobalEnv)
    tables=NULL
    assign("sim_number",value = 0,envir = .GlobalEnv)
  }
  sim_number <- 1
  while(t <= 0){
    row <- row + 1
    rates <- actualize_rates(B,E,M,n)
    total.rate <- (M-B)*rates[1] + B*rates[2] + E*rates[3] + M*rates[4] + B*rates[5] + B*rates[6] + E*rates[7] + M*rates[8]
    dt <- as.numeric(rexp(1, rate = total.rate))
    event <- sample(c("immigration", "cladogenesis_B", "cladogenesis_E","cladogenesis_M", "anagenesis", "extinction_B", "extinction_E","extinction_M"), size = 1, replace = T,  prob = rates)
    if(event == "immigration"){
      B <- B + 1
      M <- M - 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Mid,1) #Quit id from Mid vector
        Mid=setdiff(Mid,take_id)
        Bid=c(Bid,take_id) #Add id to Bid vector
        father_id=take_id #add id to putative fathers in B
        Bid=c(Bid,father_id)
        number_tables=number_tables+1 #create a table with the new father's id
        tables("new",richness,take_id,father_id,sim_number,number_tables)
      }
    } else if (event == "cladogenesis_B" && B>0){
      B <- B - 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Bid,1) #remove id from Bid vector
        Bid=setdiff(Bid,take_id)
        father_id=take_id #take id as a father id for updating tables later
        Bid=setdiff(Bid,take_id) #remove id from putative fathers in B
        tables("die",richness,take_id,father_id,sim_number,number_tables) #add extiction date to the table
      }
      choose <- sample(1:0,1) #decide if cladogenesis happens in Mainland or island
      if (choose==0){#island
        E <- E + 2
        richness[row,] <- c(t, B, E, n, M)
        if(table.generation){
          for (i in 1:2){
            take_id=length(ID)+1 #create new Eid
            Eid=c(Eid,take_id)
            ID=c(ID,take_id) #update total IDs table
            tables("add",richness,take_id,father_id,sim_number,number_tables) #add row to the table
          }
        }
      }else{#mainland
        M <- M + 2
        richness[row,] <- c(t, B, E, n, M)
        if(table.generation){
          for (i in 1:2){ #update mainland ids
            take_id=length(ID)+1
            Mid=c(Mid,take_id)
          }
        }
      }
    } else if (event == "cladogenesis_E" && E>0){
      E <- E + 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Eid,size = 1) #take putative father
        father_id=take_id
        Eid=setdiff(Eid,father_id)
        tables("die",richness,take_id,father_id,sim_number,number_tables) #add extinction date to the father
        for (i in 1:2){ #remove id from putative fathers in E and form Eid
          take_id=length(ID)+1 #generate new id
          Eid=c(Eid,take_id)#add id to total ids,to Eid and to putative fathers in E id
          ID=c(ID,take_id)
          tables("add",richness,take_id,father_id,sim_number,number_tables)#update table
        }
      }
    } else if (event == "cladogenesis_M"){
      M <- M + 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=length(ID)+1
        Mid=c(Mid,take_id)
        ID=c(ID,take_id)
      }
    } else if (event == "anagenesis" && B>0){
      B <- B - 1
      E <- E + 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Bid,1) #take B id and eliminate from Bid vector
        Bid=setdiff(Bid,take_id)
        tables("die",richness,father_id,father_id,sim_number,number_tables) #add extiction time
        take_id=length(ID)+1 #generate an id for new E, add it to Eid and to putative E fathers
        Eid=c(Eid,take_id)
        ID=c(ID,take_id)
      }
    } else if (event == "extinction_B" && B>0){
      B <- B - 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Bid,1) #take a B id and remove it to Bid, and to putative fathers in B
        Bid=setdiff(Bid,take_id)
        Bid=setdiff(Bid,take_id)
        tables("die",richness,take_id,father_id,sim_number,number_tables) #add extinction date to the table 
      }
    } else if (event == "extinction_E"){
      E <- E - 1
      richness[row,] <- c(t, B, E, n, M)
      if(table.generation){
        take_id=sample(Eid,1) #take a E id and remove it to Eid, and to putative fathers in E
        Eid=setdiff(Eid,take_id)
        tables("die",richness,take_id,father_id,sim_number,number_tables)
      }
    } else if (event == "extinction_M"){
      M <- M - 1
      richness[row,] <- c(t, B, E, n, M) #take a M id and remove it to Mid
      if(table.generation){
        take_id=sample(Mid,1)
        Mid=setdiff(Mid,take_id)
      }
    } else {
      row <- row - 1 # reset richness in the case of no event
    }
    n <- B + E
    dt <- as.numeric(rexp(1, rate = total.rate))
    t <- t + dt
  }
  return(richness)
}
richness <- simulation(B,E,M)



#### Plot the simulation ####
par(mar = c(5,5,2,5))
plot(data = richness, n~t, type = "l", lty = 2, main = "One Simulation", xlab = "Time (mya)", ylab = "Richness")
lines(data = richness, B~t, col = "blue", lwd = 2)
lines(data = richness, E~t, col = "red", lwd = 2)
par(new=T)
plot(data = richness, M~t, type = "l", axes = F, xlab = NA, ylab = NA, col = "green")
axis(4)
mtext(text = "Mainland Richness", side=4, line=3)
for(i in 1:20){abline(h = 500 + i*50, lty = 2, col = "grey")}

